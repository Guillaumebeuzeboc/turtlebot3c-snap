name: turtlebot3c
version: git
license: GPL-3.0
summary: Turtlebot3c core snap
description: |
  This snap automatically spawn a roscore and the core components for the
  Turtlebot3.

grade: stable
confinement: strict
base: core20 # Noetic

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf

parts:
  workspace:
    plugin: catkin
    source: .
    build-packages: [git, python3-vcstool]
    stage-packages:
      - ros-noetic-rosbash # necessary if we need rosrun
      - ros-noetic-roslaunch # necessary if we need roslaunch
    override-pull: |
      snapcraftctl pull # Here we are going to use the local .rosinstall file
      vcs import --input turtlebot3c.rosinstall

  # copy local scripts to the snap usr/bin
  local-files:
    plugin: dump
    source: snap/local/
    organize:
      '*.sh': usr/bin/

apps:
  core:
    daemon: simple
    environment:
      TURTLEBOT3_MODEL: waffle_pi
      ROS_HOME: $SNAP_USER_DATA/ros
    command: opt/ros/noetic/bin/roslaunch turtlebot3c_bringup turtlebot3c_bringup.launch
    plugs: [network, network-bind]
    extensions: [ros1-noetic]

  teleop:
    daemon: simple
    environment:
      TURTLEBOT3_MODEL: waffle_pi
      ROS_HOME: $SNAP_USER_DATA/ros
    command: opt/ros/noetic/bin/roslaunch turtlebot3c_teleop turtlebot3c_teleop.launch
    plugs: [network, network-bind]
    extensions: [ros1-noetic]

  key:
    environment:
      TURTLEBOT3_MODEL: waffle_pi
      ROS_HOME: $SNAP_USER_DATA/ros
    command-chain: [usr/bin/mux_select_key_vel.sh]
    command: opt/ros/noetic/bin/roslaunch turtlebot3c_teleop key.launch
    plugs: [network, network-bind]
    extensions: [ros1-noetic]

  joy:
    environment:
      TURTLEBOT3_MODEL: waffle_pi
      ROS_HOME: $SNAP_USER_DATA/ros
    command-chain: [usr/bin/mux_select_joy_vel.sh]
    command: opt/ros/noetic/bin/roslaunch turtlebot3c_teleop joy.launch
    plugs: [network, network-bind, joystick]
    extensions: [ros1-noetic]

  mapping:
    environment:
      TURTLEBOT3_MODEL: waffle_pi
      ROS_HOME: $SNAP_USER_DATA/ros
    command-chain: [usr/bin/mux_select_key_vel.sh]
    command: opt/ros/noetic/bin/roslaunch turtlebot3c_2dnav turtlebot3c_mapping.launch
    daemon: simple
    install-mode: disable
    stop-command: usr/bin/save_map.sh
    post-stop-command: usr/bin/install_last_map.sh
    plugs: [network, network-bind]
    extensions: [ros1-noetic]

  navigation:
    environment:
      TURTLEBOT3_MODEL: waffle_pi
      ROS_HOME: $SNAP_USER_DATA/ros
      # map server need pulseaudio
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/x86_64-linux-gnu/pulseaudio"
    command-chain: [usr/bin/mux_select_nav_vel.sh]
    command: usr/bin/navigation_launcher.sh
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind]
    extensions: [ros1-noetic]
